// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storage;

#nullable disable

namespace Storage.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20220803231643_AddedRolesToUserEntity")]
    partial class AddedRolesToUserEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Storage.Entities.Card", b =>
                {
                    b.Property<long>("Pan")
                        .HasColumnType("bigint");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<long>("Cvv")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Pan");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Storage.Entities.CurrencyAccounts", b =>
                {
                    b.Property<long>("Pan")
                        .HasColumnType("bigint");

                    b.Property<long?>("Eur")
                        .HasColumnType("bigint");

                    b.Property<long?>("Rub")
                        .HasColumnType("bigint");

                    b.Property<long?>("Usd")
                        .HasColumnType("bigint");

                    b.HasKey("Pan");

                    b.ToTable("CurrencyAccounts");
                });

            modelBuilder.Entity("Storage.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Storage.Entities.Card", b =>
                {
                    b.HasOne("Storage.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Storage.Entities.CurrencyAccounts", b =>
                {
                    b.HasOne("Storage.Entities.Card", "Card")
                        .WithOne("CurrencyAccounts")
                        .HasForeignKey("Storage.Entities.CurrencyAccounts", "Pan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Storage.Entities.Card", b =>
                {
                    b.Navigation("CurrencyAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
